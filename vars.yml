
packages:
  - name: python3-psutil # for ansible to use dconf
    pacman: [python-psutil]
  - name: git 
  - name: zsh 
  - name: expect # for scripts that expect something
  - name: screen # for long running tasks 
  - name: httpie # http client
  - name: jq # json query and formatter
  - name: htop 
  - name: guake # top-down terminal 
  - name: xclip # copy output from cli into clipboard
  - name: vim # command line editor
  - name: meld # diff tool
  - name: flatpak # Flatpak as alternative for package managers like dnf, apt and pacman
  - name: xorg-xkill # kill windows with mouse click
    dnf: [xkill]
    apt: []
  - name: mtr # network tool
  - name: xrandr # display tool
    apt: [mtr-tiny]
    pacman: [xorg-xrandr]
  
  - name: pinta # like paint.net

  - name: util-linux # e.g. for chsh
    dnf: [util-linux-user]

  - name: docker
    pacman: [docker, docker-compose]
    dnf: [docker-ce, docker-ce-cli, containerd.io, docker-compose]
    apt: [docker-ce, docker-ce-cli, containerd.io, docker-compose] 

  - name: vscodium
    pacman: [vscodium-bin]
    dnf: [codium]
    apt: [codium]

  # TODO: Finally decide for browser: Chromium, Brave, Vivaldi, Opera, ...
  - name: chromium
    apt: [chromium-browser, chromium-browser-l10n, chromium-codecs-ffmpeg, chromium-codecs-ffmpeg-extra]

  # TODO: Finally decide for email client: Thunderbird, Geary, ...
  - name: thunderbird

  - name: signal-desktop
    dnf: [] # will be installed via flatpak
    apt: [] # will be installed via flatpak

flatpaks:
  - name: org.signal.Signal
    pacman: no
    dnf: yes
    apt: yes

repositories:
  dnf:
    - name: VSCodium
      desc: "VS Codium"
      gpg: https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg
      baseurl: https://paulcarroty.gitlab.io/vscodium-deb-rpm-repo/rpms/

    - name: Docker
      repo: https://download.docker.com/linux/fedora/docker-ce.repo

  apt:
    - name: VSCodium
      gpg: https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg
      baseurl: https://paulcarroty.gitlab.io/vscodium-deb-rpm-repo/debs
      distribution: vscodium
      components: main

    - name: Docker
      gpg: https://download.docker.com/linux/ubuntu/gpg
      baseurl: https://download.docker.com/linux/ubuntu
      components: stable

  pacman: []

github_projects:
  - cv
  - dev-env
  - sciurus
  - sciurus-cache-redis
  - strix
  - website

config:
  dir: "{{ ansible_env.HOME }}/.config"
  zshrc: "{{ ansible_env.HOME }}/.zshrc"
  bashrc: "{{ ansible_env.HOME }}/.bashrc"
  customrc: "{{ ansible_env.HOME }}/.customrc"
  aliases: "{{ ansible_env.HOME }}/.custom_aliases"

  projects_folder: "{{ ansible_env.HOME }}/IdeaProjects/mcarleio"
  
  # TODO: Check if some own temp dir is really necessary
  temp: "/opt/.tmp" # Not using /tmp, as it could be defined to small 

  fonts: [Hack, Terminus, FiraCode, SourceCodePro]

  git:
    name: "Marcel Carl√©"
    email: "hi-github@mcarle.io"

  gnome:
    favorites:
      - name: org.gnome.Nautilus.desktop
      - name: chromium.desktop
        apt: chromium_chromium.desktop
        dnf: chromium-browser.desktop
      - name: jetbrains-idea.desktop
      - name: org.gnome.Terminal.desktop
      - name: codium.desktop
      - name: cryptonify.desktop

ohmyzsh:
  install:
    - name: zsh-autosuggestions
      url: https://github.com/zsh-users/zsh-autosuggestions.git
      type: plugins
    - name: zsh-syntax-highlighting
      url: https://github.com/zsh-users/zsh-syntax-highlighting.git
      type: plugins
    - name: powerlevel10k
      url: https://github.com/romkatv/powerlevel10k.git
      type: themes

apps:
  link_dir: &app_linkdir /opt
  scripts_dir: "{{ ref.app_linkdir }}/.scripts"
  app_dir: "{{ ref.app_linkdir }}/.applications"
  installed_file: "{{ ref.app_linkdir }}/.installed_applications"
  desktop_dir: "{{ ansible_env.HOME }}/.local/share/applications"
  path_file: "{{ ansible_env.HOME }}/.app_paths"
  binaries_link_dir: "{{ ref.app_linkdir }}/.bin"
  list:
    # Candidates: https://api.sdkman.io/2/candidates/list
    # Versions: https://api.sdkman.io/2/candidates/java/linuxx64/versions/list?installed=
    # TODO: Check if some of the apps could be better installed via OS' package manager
    jdk17:
      url: https://api.sdkman.io/2/broker/download/java/17.0.1-zulu/linuxx64
      url_unversioned: yes
      symlinked_dir: jdk17
      bin_path: bin
    jdk11:
      url: https://api.sdkman.io/2/broker/download/java/11.0.13-zulu/linuxx64
      symlinked_dir: jdk11
    jdk8:
      url: https://api.sdkman.io/2/broker/download/java/8.0.312-zulu/linuxx64
      symlinked_dir: jdk8
    graalvm-jdk17:
      url: https://api.sdkman.io/2/broker/download/java/21.3.0.r17-grl/linuxx64
      symlinked_dir: graalvm
      binaries: ["bin/gu"]
    maven:
      # url: https://dlcdn.apache.org/maven/maven-3/3.8.3/binaries/apache-maven-3.8.3-bin.tar.gz
      url: https://api.sdkman.io/2/broker/download/maven/3.8.4/linuxx64
      symlinked_dir: maven
      bin_path: bin
    gradle:
      url: https://api.sdkman.io/2/broker/download/gradle/7.3.3/linuxx64
      symlinked_dir: gradle
      bin_path: bin
    cryptonify:
      url: https://marcel-carle.de/assets/Cryptonify/Downloads/2.3.1/cryptonify-2.3.1.zip
      symlinked_dir: cryptonify
      desktop_file: cryptonify.desktop
      dependsOn: [jdk8]
    camunda:
      url: https://downloads.camunda.cloud/release/camunda-modeler/4.11.1/camunda-modeler-4.11.1-linux-x64.tar.gz
      symlinked_dir: camunda-modeler
      desktop_file: camunda-modeler.desktop
      binaries: ["camunda-modeler"]
    idea:
      # TODO: Alternative extract version via curl 'https://data.services.jetbrains.com/products?code=IIU&release.type=release' | jq ".[0].releases[0]"
      url: https://download.jetbrains.com/idea/ideaIU-2021.3.1.tar.gz
      symlinked_dir: idea
      desktop_file: jetbrains-idea.desktop
      # TODO: This is only here, as when changing the url (version), one need to amend this config as well
      config_dir: "{{ config.dir }}/JetBrains/IntelliJIdea2021.3"
    terraform:
      url: https://releases.hashicorp.com/terraform/1.1.2/terraform_1.1.2_linux_amd64.zip
      single_file: terraform
    nodejs:
      url: https://nodejs.org/dist/v16.13.1/node-v16.13.1-linux-x64.tar.xz
      symlinked_dir: nodejs
      bin_path: bin
    kubectl:
      # Current version: https://storage.googleapis.com/kubernetes-release/release/stable.txt
      url: https://dl.k8s.io/release/v1.23.1/bin/linux/amd64/kubectl
      executable: yes

ref:
  app_linkdir: *app_linkdir

# TODO: Define further manual steps
further_steps_text: |
  <span color="green" size="large"><b>Successfully</b></span> finished the <i>dev-env</i> setup!

  Please perform the following manual steps:
  1. Update firmware(s): fwupdmgr update
  2. Upload SSH public key to e.g. GitHub 
  3. Check for tiling window tools (e.g. Pop Shell for GNOME Shell)
  4. ...
  5. Reboot
